name: Validate Blueprint catalog content

on:
  workflow_call:
    secrets:
      api-token:
        required: true

env:
  CATALOG_FILE: .blueprint/catalog-info.yaml
  BLUEPRINT_BASE_URL: https://blueprint.obos.dev

jobs:
  validate:
    if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    env:
      BLUEPRINT_API_TOKEN: ${{ secrets.api-token }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if ${{ env.CATALOG_FILE }} has changed
        id: file-check
        run: |
          echo "üîç Checking for changes in ${CATALOG_FILE}"
          
          # Ensure we have the previous commit
          git fetch origin "${{ github.event.before }}"
          
          # Check if the catalog file changed between the two commits
          if git diff --name-only "${{ github.event.before }}" "${{ github.sha }}" | grep -q -- "${CATALOG_FILE}"; then
            echo "‚úÖ ${CATALOG_FILE} has changed."
            echo "changed=true" >> "$GITHUB_OUTPUT"
            else
            echo "‚ÑπÔ∏è ${CATALOG_FILE} has not changed."
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Validate
        if: steps.file-check.outputs.changed == 'true'
        run: |
          # Extract organization, repository, and branch names
          ORG_NAME="${GITHUB_REPOSITORY%%/*}"
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          
          # Split multi-document YAML into separate files
          awk 'BEGIN{n=0;} /^---/{n++} {print > ("entity_" n ".yaml")}' "${CATALOG_FILE}"
          
          # Validate each entity
          for entity in entity_*.yaml; do
            KIND=$(yq '.kind' "$entity")
            NAME=$(yq '.metadata.name' "$entity")
            JSON=$(yq -o=json "$entity")
            echo "--- Validating $KIND:$NAME"
            
            response=$(curl -s -w "%{http_code}" -o response.json -X POST "$BLUEPRINT_BASE_URL/api/catalog/validate-entity" \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $BLUEPRINT_API_TOKEN" \
              -d "{\"location\": \"url:https://github.com/$ORG_NAME/$REPO_NAME/blob/$BRANCH_NAME/${CATALOG_FILE}\", \"entity\": $JSON}")
            
            status_code="${response: -3}"
            if [[ "$status_code" -ne 200 ]]; then
              echo "‚ùå Validation failed for $KIND:$NAME with status code $status_code"
              cat "$entity"
              cat response.json
              exit 1
            fi
          done