name: Validate Blueprint catalog content

on:
  workflow_call:

env:
  CATALOG_FILE: .blueprint/catalog-info.yaml

jobs:
  validate:
    if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    env:
      BACKSTAGE_BASE_URL: ${{ secrets.BACKSTAGE_BASE_URL }}
      BACKSTAGE_API_TOKEN: ${{ secrets.BACKSTAGE_API_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if ${{ env.CATALOG_FILE }} has changed
        id: file-check
        run: |
          echo "Checking for changes in ${{ env.CATALOG_FILE }}"
          git fetch origin ${{ github.event.before }}
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "${{ env.CATALOG_FILE }}"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Validate ${{ env.CATALOG_FILE }}
        if: steps.file-check.outputs.changed == 'true'
        run: |
          awk 'BEGIN{n=0;} /^---/{n++} {print > ("entity_" n ".yaml")}' "${{ env.CATALOG_FILE }}"
          for entity in entity_*.yaml; do
            echo "--- Validating entity ---"
            cat "$entity"
            json=$(yq -o=json "$entity")
            response=$(curl -s -w "%{http_code}" -o response.json -X POST "$BACKSTAGE_BASE_URL/api/catalog/validate-entity" \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $BACKSTAGE_API_TOKEN" \
              -d "{\"location\": \"${{ env.CATALOG_FILE }}\", \"entity\": $json}")
            
            status_code="${response: -3}"
            body=$(cat response.json)
            if [ "$status_code" -ne 200 ]; then
              echo "‚ùå Validation failed with status code $status_code"
              echo "$body"
              exit 1
            fi

                                   
                                   done
